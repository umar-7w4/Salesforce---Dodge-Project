<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <description>The Route Work action is used to input the routing requirements to Omni-Channel.
This example shows routing directly to the owner of the Contact who is calling.</description>
        <name>RouteToAgent</name>
        <label>Route Direct to Agent</label>
        <locationX>50</locationX>
        <locationY>398</locationY>
        <actionName>routeWork</actionName>
        <actionType>routeWork</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>agentId</name>
            <value>
                <elementReference>GetContact.OwnerId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>botLabel</name>
        </inputParameters>
        <inputParameters>
            <name>botId</name>
        </inputParameters>
        <inputParameters>
            <name>skillRequirementsResourceItem</name>
        </inputParameters>
        <inputParameters>
            <name>isAgentRequired</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>isAgentVariable</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>skillOption</name>
        </inputParameters>
        <inputParameters>
            <name>recordId</name>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>routingConfigLabel</name>
            <value>
                <stringValue>[REPLACE ME]</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>routingConfigId</name>
            <value>
                <stringValue></stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>routingType</name>
            <value>
                <stringValue>Agent</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>serviceChannelLabel</name>
            <value>
                <stringValue>[Chat Service Channel]</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>serviceChannelDevName</name>
            <value>
                <stringValue>sfdc_liveagent</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>serviceChannelId</name>
            <value>
                <stringValue></stringValue>
            </value>
        </inputParameters>
    </actionCalls>
    <actionCalls>
        <description>The Route Work action is used to input the routing requirements to Omni-Channel.
This example shows routing to a defined Queue.</description>
        <name>RouteToQueueA</name>
        <label>Route to Queue A</label>
        <locationX>314</locationX>
        <locationY>398</locationY>
        <actionName>routeWork</actionName>
        <actionType>routeWork</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>agentLabel</name>
        </inputParameters>
        <inputParameters>
            <name>agentId</name>
        </inputParameters>
        <inputParameters>
            <name>botLabel</name>
        </inputParameters>
        <inputParameters>
            <name>botId</name>
        </inputParameters>
        <inputParameters>
            <name>skillRequirementsResourceItem</name>
        </inputParameters>
        <inputParameters>
            <name>skillOption</name>
        </inputParameters>
        <inputParameters>
            <name>queueId</name>
            <value>
                <stringValue></stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>queueLabel</name>
            <value>
                <stringValue>[REPLACE ME]</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recordId</name>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>routingConfigLabel</name>
        </inputParameters>
        <inputParameters>
            <name>routingConfigId</name>
        </inputParameters>
        <inputParameters>
            <name>routingType</name>
            <value>
                <stringValue>QueueBased</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>serviceChannelLabel</name>
            <value>
                <stringValue>[Chat Service Channel]</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>serviceChannelDevName</name>
            <value>
                <stringValue>sfdc_liveagent</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>serviceChannelId</name>
            <value>
                <stringValue></stringValue>
            </value>
        </inputParameters>
    </actionCalls>
    <actionCalls>
        <description>The Route Work action is used to input the routing requirements to Omni-Channel.
This example shows routing to a defined Queue.</description>
        <name>RouteToQueueB</name>
        <label>Route to Queue B</label>
        <locationX>578</locationX>
        <locationY>398</locationY>
        <actionName>routeWork</actionName>
        <actionType>routeWork</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>agentLabel</name>
        </inputParameters>
        <inputParameters>
            <name>agentId</name>
        </inputParameters>
        <inputParameters>
            <name>botLabel</name>
        </inputParameters>
        <inputParameters>
            <name>botId</name>
        </inputParameters>
        <inputParameters>
            <name>skillRequirementsResourceItem</name>
        </inputParameters>
        <inputParameters>
            <name>skillOption</name>
        </inputParameters>
        <inputParameters>
            <name>queueId</name>
            <value>
                <stringValue></stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>queueLabel</name>
            <value>
                <stringValue>[REPLACE ME]</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recordId</name>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>routingConfigLabel</name>
        </inputParameters>
        <inputParameters>
            <name>routingConfigId</name>
        </inputParameters>
        <inputParameters>
            <name>routingType</name>
            <value>
                <stringValue>QueueBased</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>serviceChannelLabel</name>
            <value>
                <stringValue>[Chat Service Channel]</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>serviceChannelDevName</name>
            <value>
                <stringValue>sfdc_liveagent</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>serviceChannelId</name>
            <value>
                <stringValue></stringValue>
            </value>
        </inputParameters>
    </actionCalls>
    <apiVersion>55.0</apiVersion>
    <decisions>
        <description>This example decision node looks at the Contact that is messaging and decides which Queue they should be routed to. Here, it checks both the name and country of the customer.</description>
        <name>RouteCustomerDecision</name>
        <label>How should the customer be routed?</label>
        <locationX>314</locationX>
        <locationY>278</locationY>
        <defaultConnector>
            <targetReference>RouteToQueueB</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>All Other Customers</defaultConnectorLabel>
        <rules>
            <name>CustomerNameOutcome</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetContact.FirstName</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>Sara</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>RouteToAgent</targetReference>
            </connector>
            <label>Customer Name contains Sara</label>
        </rules>
        <rules>
            <name>CustomerLocationOutcome</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetContact.MailingCountry</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>USA</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>RouteToQueueA</targetReference>
            </connector>
            <label>Customer Location is in USA</label>
        </rules>
    </decisions>
    <description>Routes each message to an agent or queue based on conditions that you define.</description>
    <environments>Default</environments>
    <interviewLabel>Messages Routed to Agents and Queues {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Messages Routed to Agents and Queues</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processType>RoutingFlow</processType>
    <recordLookups>
        <description>This example action is used to load the Contact, using the Messaging User linked to the inbound Messaging Session record.
This contact can later be used to inform the decision on where to route the call.</description>
        <name>GetContact</name>
        <label>Get Contact by Contact ID</label>
        <locationX>314</locationX>
        <locationY>158</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>RouteCustomerDecision</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>RouteToQueueB</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>input_record.MessagingEndUser.ContactId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Contact</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <sourceTemplate>omnichannel_messaging__MsgRouting</sourceTemplate>
    <start>
        <locationX>188</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>GetContact</targetReference>
        </connector>
    </start>
    <status>Draft</status>
    <variables>
        <description>The messaging session record that is being inputted into the flow. Necessary for the flow to run.</description>
        <name>input_record</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <objectType>MessagingSession</objectType>
    </variables>
    <variables>
        <description>The ID of the record being inputted into the flow. Necessary for the flow to run.</description>
        <name>recordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
