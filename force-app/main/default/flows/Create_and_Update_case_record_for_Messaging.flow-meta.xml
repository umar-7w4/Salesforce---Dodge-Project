<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>55.0</apiVersion>
    <assignments>
        <name>AssignCaseId</name>
        <label>AssignCaseId</label>
        <locationX>138</locationX>
        <locationY>1055</locationY>
        <assignmentItems>
            <assignToReference>CaseId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>CreateCase</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>UpdateCaseIdInMessagerecord</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>ISAutomatedUser</name>
        <label>ISAutomatedUser</label>
        <locationX>666</locationX>
        <locationY>695</locationY>
        <defaultConnector>
            <targetReference>UpdateCaseOwner_0</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>YesAuto</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Owner:User.Alias</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>autoproc</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetQueueId</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>IsCaseExisting</name>
        <label>IsCaseExisting</label>
        <locationX>50</locationX>
        <locationY>815</locationY>
        <defaultConnector>
            <targetReference>CreateCase</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>YesCase</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>CaseId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>UpdateCaseIdInMessagerecord</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>IsGroup</name>
        <label>IsGroup?</label>
        <locationX>534</locationX>
        <locationY>575</locationY>
        <defaultConnector>
            <targetReference>ISAutomatedUser</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>YesGroup</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.OwnerId</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <stringValue>00G</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetQueueId</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>IsNew</name>
        <label>IsNew</label>
        <locationX>413</locationX>
        <locationY>335</locationY>
        <defaultConnector>
            <targetReference>IsOwnerchanged</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.CreatedDate</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>$Record.LastModifiedDate</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetContact</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>IsOwnerchanged</name>
        <label>IsOwnerchanged?</label>
        <locationX>776</locationX>
        <locationY>455</locationY>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>YesMesage</name>
            <conditionLogic>( 1 AND 2 ) OR (5 AND (3 OR 4))</conditionLogic>
            <conditions>
                <leftValueReference>$Record.OwnerId</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.OwnerId</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue></stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Active</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Ended</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>IsGroup</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <formulas>
        <name>CaseOwnerId</name>
        <dataType>String</dataType>
        <expression>IF(TEXT({!$Record.Case.Type})!=&apos;Technical Support&apos;,{!GetQueueId.VInsideSalesCase},
	IF(TEXT({!$Record.Case.Product_Group__c})==&apos;Gearing&apos;,{!GetQueueId.VApplication_Engineering_Gearing},
		IF(TEXT({!$Record.Case.Product_Group__c})==&apos;Mounted Bearings&apos;,{!GetQueueId.VApplication_Engineering_Mounted_Bearings},
			IF(TEXT({!$Record.Case.Product_Group__c})==&apos;Belted Drives&apos;,{!GetQueueId.VApplication_Engineering_PTC_BMH},
				IF(TEXT({!$Record.Case.Product_Group__c})==&apos;Couplings&apos;,{!GetQueueId.VApplication_Engineering_PTC_BMH},
					IF(TEXT({!$Record.Case.Product_Group__c})==&apos;Conveyor pulleys&apos;,{!GetQueueId.VApplication_Engineering_PTC_BMH},
							IF(TEXT({!$Record.Case.Product_Group__c})==&apos;Sensor products&apos;,{!GetQueueId.VApplication_Engineering_IIoT_Technology},{!GetQueueId.VInsideSalesCase})))))))</expression>
    </formulas>
    <interviewLabel>Create and Update case record for Messaging {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Create and Update case record for Messaging</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>CreateCase</name>
        <label>CreateCase</label>
        <locationX>138</locationX>
        <locationY>935</locationY>
        <connector>
            <targetReference>AssignCaseId</targetReference>
        </connector>
        <inputAssignments>
            <field>ContactId</field>
            <value>
                <elementReference>GetContact.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Origin</field>
            <value>
                <stringValue>Text</stringValue>
            </value>
        </inputAssignments>
        <object>Case</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <name>GetCaseRecord</name>
        <label>GetCaseRecord</label>
        <locationX>50</locationX>
        <locationY>695</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>IsCaseExisting</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetMessageUser.Case.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Closed</stringValue>
            </value>
        </filters>
        <object>Case</object>
        <outputAssignments>
            <assignToReference>CaseId</assignToReference>
            <field>Id</field>
        </outputAssignments>
        <sortField>CreatedDate</sortField>
        <sortOrder>Desc</sortOrder>
    </recordLookups>
    <recordLookups>
        <name>GetContact</name>
        <label>GetContact</label>
        <locationX>50</locationX>
        <locationY>455</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetMessageUser</targetReference>
        </connector>
        <filterLogic>or</filterLogic>
        <filters>
            <field>Phone</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.MessagingEndUser.MessagingPlatformKey</elementReference>
            </value>
        </filters>
        <filters>
            <field>MobilePhone</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.MessagingEndUser.MessagingPlatformKey</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Contact</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetMessageUser</name>
        <label>GetMessageUser</label>
        <locationX>50</locationX>
        <locationY>575</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetCaseRecord</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>MessagingEndUserId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.MessagingEndUser.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>CaseId</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue></stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>MessagingSession</object>
        <sortField>CreatedDate</sortField>
        <sortOrder>Desc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>UpdateCaseIdInMessagerecord</name>
        <label>UpdateCaseIdInMessagerecord</label>
        <locationX>50</locationX>
        <locationY>1271</locationY>
        <inputAssignments>
            <field>CaseId</field>
            <value>
                <elementReference>CaseId</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>UpdateCaseOwner</name>
        <label>UpdateCaseOwner</label>
        <locationX>534</locationX>
        <locationY>1367</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.CaseId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>CaseOwnerId</elementReference>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <recordUpdates>
        <name>UpdateCaseOwner_0</name>
        <label>UpdateCaseOwner</label>
        <locationX>754</locationX>
        <locationY>815</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.CaseId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>$Record.OwnerId</elementReference>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <start>
        <locationX>287</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>IsNew</targetReference>
        </connector>
        <object>MessagingSession</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <subflows>
        <name>GetQueueId</name>
        <label>GetQueueId</label>
        <locationX>534</locationX>
        <locationY>1247</locationY>
        <connector>
            <targetReference>UpdateCaseOwner</targetReference>
        </connector>
        <flowName>GetQueueId</flowName>
        <inputAssignments>
            <name>OnlyCaseOwnerId</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputAssignments>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </subflows>
    <variables>
        <name>CaseId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>CaseOwnerQueueId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>00G74000000pvqq</stringValue>
        </value>
    </variables>
</Flow>
